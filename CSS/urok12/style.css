/* Общение бывают след типов:
	+ 1) теги p
	+ 2) класс .
	+ 3) id #
	+ 4) атрибуты []
*/

.fon_yellow {
	background: red;
}
li {
	font-size: 12px;
}

.second_class {
	border: 10px solid black 
}

/* Перечисление классов которые находятся в одном сегменте CLASS */
/* class="fon_yellow second_class sun help" */
.fon_yellow.second_class.sun.help {
	background: yellow;
}

/* Данная запись трактуется след образом: 
	main_menu 	- основной родительский блок
	sun			- внутренний элемент который находится внутри блока main_menu

	По простому::
	CSS должен найти в HTML класс SUN  который находится внутри Main_menu
*/
.main_menu .sun {
	background: pink;
}

/* Если нужно указать для нескольких блоков одни и те же цвета то, мы можем перечилсить class / id / tags / attribute через запятую  */
.primer div,
.primer p {
	background: red;
}

#my_id { 
	background: yellow;
}


[data-ismar="name"] {
	background: pink;
}


/* Urok 12 */

.urok12 {
	background-image: url(https://static9.depositphotos.com/1594308/1110/i/600/depositphotos_11107478-stock-photo-fantasy.jpg);
	background-size: cover;
	background-repeat: no-repeat;
	width: 100%;
	height: 500px;
	margin-top: 120px;
	margin-bottom: 120px;
	/* margin-left: 120px; */
	/* margin-top: 120%; */
	/* px 	- конкретное заданное число измерения которое не изменяется*/
	/* rem 	- относительная единца измерения которая базируется от html */
	/* em 	- относительная единца измерения которая базируется от родительского блока */
	/* % 	- относительная единца измерения которая базируется от ширины экрана либо блока к которому он задан */


	/* Правила 4-х сторон */
	/* 
		Нужно всегда знать что есть 4 стороны
		Левая сторона 
		Верхняя сторона 
		Правая сторона 
		Нижняя сторона 
	 */

	 /* ЦВЕТ 
		Оранжевый цвет - margin  = внешний отстпу
		Желтый цвет - border границы
		Зеленый цвет - padding  - внутренние отступы
		Синий цвет - Контент = содержимое документа
	 */
}

a { 
	display: block;

	/* block 		- блочная структура */
	/* inline-block - строчная структура */
	/* flex 		- удобная адаптация ширины */
}

.urok12_1 {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 500px;
    border: 2px solid black;
}

.urok12_1 ul {
    padding: 0;
}


/* Псевдо классы - это событие + обращение к позициям того или иного блока

*/	
.urok12_1 ul li:nth-child(3) {
	background: red;
}
.urok12_1 ul li:nth-child(2n) {
	background: red;
}


/* Задача::
	По наведению на блок urok12_1 задний фон должен изменится

	По наведению = :hover
	на блок		 = .urok12_1

	Что должно произойти?
		
		задний фон должен изменится
			background-color: brown;

*/
.urok12_1 {
	transition: .5s;
}
.urok12_1:hover { 
	background-color: brown;
}
/*
.urok12_1 	- на что должно быть наведено
:hover 		- наведение  */